name: Check CodeRabbit Review and Label PR

on:
  # Kích hoạt khi có comment được tạo ra trên một Issue hoặc Pull Request
  issue_comment:
    types: [created]

jobs:
  evaluate_codereview:
    # Điều kiện để chạy job:
    # 1. Đây là một sự kiện trên Pull Request.
    # 2. Người comment là bot của CodeRabbit (bạn cần xác nhận username này).
    # 3. Nội dung comment chứa chuỗi đặc trưng báo hiệu review đã xong.
    if: |
      github.event.issue.pull_request &&
      github.event.comment.user.login == 'coderabbitai[bot]' &&
      contains(github.event.comment.body, 'CodeRabbit AI Code Review')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read # Cần quyền read để lấy code nếu cần, nhưng chủ yếu là để gọi API

    steps:
      - name: Get PR Number
        id: get_pr_number
        run: |
          # Lấy số PR từ payload của sự kiện issue_comment
          pr_number=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT

      - name: Wait for API to be consistent
        run: sleep 15s # Thêm một khoảng chờ ngắn để đảm bảo tất cả comment đã được API ghi nhận đầy đủ sau khi trigger

      - name: Check for "Potential issue" comments
        id: check_comments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.get_pr_number.outputs.pr_number }}
          REPO_FULL_NAME: ${{ github.repository }}
        run: |
          # Sử dụng GitHub CLI để gọi API
          # Lấy tất cả các comment review (comment trên dòng code) trong PR
          comments=$(gh api \
            "repos/${REPO_FULL_NAME}/pulls/${PR_NUMBER}/comments" \
            --jq '.[] | select(.user.login == "coderabbitai[bot]") | .body')

          # Đếm số lượng comment có chứa "Potential issue"
          issue_count=0
          while IFS= read -r comment; do
            if echo "$comment" | grep -q "Potential issue"; then
              issue_count=$((issue_count + 1))
            fi
          done <<< "$comments"

          echo "Found $issue_count 'Potential issue' comments."
          echo "issue_count=$issue_count" >> $GITHUB_OUTPUT

      - name: Set PR status to failure if issue count exceeds threshold
        if: steps.check_comments.outputs.issue_count > 3
        run: |
          echo "Number of 'Potential issue' comments is greater than 3. Failing the check."
          exit 1

      - name: Add "READY TO MERGE" label if criteria are met
        if: steps.check_comments.outputs.issue_count < 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.get_pr_number.outputs.pr_number }}
        run: |
          echo "All checks passed. Adding 'READY TO MERGE' label."
          gh pr edit ${{ steps.get_pr_number.outputs.pr_number }} --add-label "READY TO MERGE"

      - name: Remove "READY TO MERGE" label if criteria are not met anymore
        if: steps.check_comments.outputs.issue_count >= 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ steps.get_pr_number.outputs.pr_number }}
        run: |
          echo "Criteria not met. Removing 'READY TO MERGE' label if it exists."
          gh pr edit ${{ steps.get_pr_number.outputs.pr_number }} --remove-label "READY TO MERGE" || true
